#!/bin/sh

set -e

case "$1" in
    configure)

	# Symlink /opt/zeek to /opt/bro
	LINK="/opt/zeek"
	TARGET="bro"
	if [ -e $LINK ]; then 
		echo "Verified that $LINK exists."
	else
		echo "Linking $LINK to $TARGET"
		ln -s $TARGET $LINK || echo "Error linking $LINK."
	fi

	# Symlink /nsm/zeek to /nsm/bro
	LINK="/nsm/zeek"
	TARGET="bro"
	if [ -e $LINK ]; then 
		echo "Verified that $LINK exists."
	else
		echo "Linking $LINK to $TARGET"
		ln -s $TARGET $LINK || echo "Error linking $LINK."
	fi

	# Symlink /opt/bro/share/zeek/site/local.bro to /opt/bro/share/zeek/site/local.zeek
	LINK="/opt/bro/share/zeek/site/local.bro"
	TARGET="local.zeek"
	if [ -e $LINK ]; then 
		echo "Verified that $LINK exists."
	else
		echo "Linking $LINK to $TARGET"
		ln -s $TARGET $LINK || echo "Error linking $LINK."
	fi

	# Symlink /opt/bro/etc/broctl.cfg to /opt/bro/etc/zeekctl.cfg
	LINK="/opt/bro/etc/broctl.cfg"
	TARGET="zeekctl.cfg"
	if [ -h $LINK ]; then 
		echo "Verified that $LINK is already a symlink."
	else
		if [ -f $LINK ]; then
			echo "Renaming $LINK to $LINK.bak."
			mv $LINK $LINK.bak || echo "Error renaming $LINK to $LINK.bak."
		fi
		echo "Linking $LINK to $TARGET"
		ln -s $TARGET $LINK || echo "Error linking $LINK."
	fi

        # move SpoolDir and LogDir to /nsm
	ZEEKCTLCFG=/opt/bro/etc/zeekctl.cfg
	sed -i 's|SpoolDir = /opt/bro/spool|SpoolDir = /nsm/bro/spool|g' $ZEEKCTLCFG || echo "Error updating $ZEEKCTLCFG"
	sed -i 's|LogDir = /opt/bro/logs|LogDir = /nsm/bro/logs|g' $ZEEKCTLCFG || echo "Error updating $ZEEKCTLCFG"

	PREV="pre-3.0.1"
	LOCALBRO="/opt/zeek/share/zeek/site/local.zeek"
	LOCALBROPREV="/opt/bro/share/bro/site/local.bro.$PREV"

	# Load Security Onion scripts        
	if ! grep "@load securityonion" $LOCALBRO >/dev/null; then
        	echo >> $LOCALBRO
        	echo "# Security Onion default scripts" >> $LOCALBRO
        	echo "@load securityonion" >> $LOCALBRO
	fi
	
	# File extraction (disabled by default)
	if ! grep "file-extraction" $LOCALBRO >/dev/null; then
        	echo >> $LOCALBRO
        	echo "# File Extraction" >> $LOCALBRO
		# If they had enabled file extraction previously
		# then enable it now.  Otherwise, disable it.
		if [ -f $LOCALBROPREV ] && grep "^@load file-extraction" $LOCALBROPREV >/dev/null; then
        		echo "@load file-extraction" >> $LOCALBRO
		else
        		echo "#@load file-extraction" >> $LOCALBRO
		fi
	fi
	mkdir -p /nsm/bro/extracted/

	# APT1 IOCs
	if ! grep "apt1" $LOCALBRO >/dev/null; then
        	echo >> $LOCALBRO
        	echo "# Intel from Mandiant APT1 Report" >> $LOCALBRO
		# If they had manually installed apt1 scripts previously
		# then enable the new apt1 scripts.  Otherwise, disable apt1.
		if [ -d /opt/bro/share/bro/site/apt1.2.1 ]; then
        		echo "@load apt1" >> $LOCALBRO
		elif [ -f $LOCALBROPREV ] && grep "^@load apt1" $LOCALBROPREV >/dev/null; then
        		echo "@load apt1" >> $LOCALBRO
		else
	        	echo "#@load apt1" >> $LOCALBRO
		fi
	fi

	# Load intel
	if ! grep "load intel" $LOCALBRO >/dev/null; then
        	echo >> $LOCALBRO
        	echo "# You can load your own intel into:" >> $LOCALBRO
        	echo "# /opt/zeek/share/zeek/intel/" >> $LOCALBRO
        	echo "@load intel" >> $LOCALBRO
	fi
	
	# Existing deployments need to move /opt/bro/share/bro/intel/ to /opt/zeek/share/zeek/intel/
	BROINTEL="/opt/bro/share/bro/intel"
	if [ -d $BROINTEL ] && [ ! -L $BROINTEL ] && [ ! -d /opt/zeek/share/zeek ]; then
		mkdir -p  /opt/zeek/share/zeek/ 	|| echo "Error creating /opt/zeek/share/zeek/"
		mv $BROINTEL /opt/zeek/share/zeek/ 	|| echo "Error moving $BROINTEL"
	fi

	# If /opt/zeek/share/zeek/intel/ doesn't already exist, create it
	INTEL="/opt/zeek/share/zeek/intel/"
	mkdir -p $INTEL

	# Rename intel __load__.zeek if necessary
	INTELLOAD="/opt/zeek/share/zeek/intel/__load__"
	if [ -f $INTELLOAD.bro ]; then
		mv $INTELLOAD.bro $INTELLOAD.zeek || echo "Error renaming $INTELLOAD.bro"
	fi

	# If __load__.zeek doesn't already exist, create it with default values
	INTEL_LOAD="$INTEL/__load__.zeek"
	[ -f $INTEL_LOAD ] || cat << EOF > $INTEL_LOAD
@load frameworks/intel/seen
@load frameworks/intel/do_notice
@load frameworks/files/hash-all-files

redef Intel::read_files += {
	"/opt/zeek/share/zeek/intel/intel.dat"
};
EOF

	# If intel.dat doesn't already exist, create it with default values
	INTEL_DAT="$INTEL/intel.dat"
	[ -f $INTEL_DAT ] || cat << EOF > $INTEL_DAT
#fields	indicator	indicator_type	meta.source	meta.do_notice
# EXAMPLES:
#66.32.119.38	Intel::ADDR	Test Address	T
#www.honeynet.org	Intel::DOMAIN	Test Domain	T
#4285358dd748ef74cb8161108e11cb73	Intel::FILE_HASH	Test MD5	T
EOF

	# Existing deployments need to move the contents of /opt/bro/share/bro/policy/ to /opt/zeek/share/zeek/policy/
	BROPOLICY="/opt/bro/share/bro/policy"
	if [ -d $BROPOLICY ] && [ ! -L $BROPOLICY ] && [ ! -d /opt/zeek/share/zeek/policy ]; then
		mkdir -p  /opt/zeek/share/zeek/policy 		|| echo "Error creating /opt/zeek/share/zeek/"
		mv $BROPOLICY/* /opt/zeek/share/zeek/policy/ 	|| echo "Error moving $BROPOLICY"
		mv $BROPOLICY $BROPOLICY.old			|| echo "Renaming $BROPOLICY"
	fi

	# If /opt/zeek/share/zeek/policy/ doesn't already exist, create it
	POLICY="/opt/zeek/share/zeek/policy/"
	mkdir -p $POLICY

	# Load shellshock
	if ! grep "load shellshock" $LOCALBRO >/dev/null; then
        	echo >> $LOCALBRO
        	echo "# ShellShock - detects successful exploitation of Bash vulnerability CVE-2014-6271" >> $LOCALBRO
		echo "# shellshock.bro was written for earlier version of Bro and relies on some deprecated events." >> $LOCALBRO
        	echo "#@load policy/protocols/dhcp/deprecated_events.bro" >> $LOCALBRO
        	echo "#@load shellshock" >> $LOCALBRO
	fi
	
	# if Bro was previously configured for JSON output, then add json-logs to local.bro
	if ! grep "load json-logs" $LOCALBRO >/dev/null; then
		if [ -f $LOCALBROPREV ] && grep "^@load json-logs" $LOCALBROPREV >/dev/null; then
        		echo >> $LOCALBRO
	        	echo "# Output logs in JSON format" >> $LOCALBRO
        		echo "@load json-logs" >> $LOCALBRO
		fi
	fi

	# Load ja3
	if ! grep "load ja3" $LOCALBRO >/dev/null; then
        	echo >> $LOCALBRO
        	echo "# ja3 - a standard for creating SSL client fingerprints in an easy to produce and shareable way" >> $LOCALBRO
        	echo "@load ja3" >> $LOCALBRO
	fi
	
	# Load hassh
	if ! grep "load hassh" $LOCALBRO >/dev/null; then
        	echo >> $LOCALBRO
        	echo "# hassh - a network fingerprinting standard which can be used to identify specific Client and Server SSH implementations" >> $LOCALBRO
        	echo "@load hassh" >> $LOCALBRO
	fi
	
	# Load cve-2020-0601
	if ! grep "load cve-2020-0601" $LOCALBRO >/dev/null; then
        	echo >> $LOCALBRO
        	echo "# cve-2020-0601" >> $LOCALBRO
		echo "# This script can detect exploit attempts for CVE-2020-0601." >> $LOCALBRO
		echo "# It performs a simple check to see if a known curve is used in a certificate - if this is not the case a notice is raised." >> $LOCALBRO
        	echo "@load cve-2020-0601" >> $LOCALBRO
	fi
	
	# Modern versions of Setup disable Bro's syslog.log in Production Mode
	# so if syslog.log was disabled in the previous local.bro, then re-add that setting
	if ! grep "load disable-syslog" $LOCALBRO >/dev/null; then
		if [ -f $LOCALBROPREV ] && grep "^@load disable-syslog" $LOCALBROPREV >/dev/null; then
        		echo >> $LOCALBRO
	        	echo "# Disable Bro syslog.log in Production Mode" >> $LOCALBRO
        		echo "# https://github.com/Security-Onion-Solutions/security-onion/issues/1457" >> $LOCALBRO
        		echo "@load disable-syslog" >> $LOCALBRO
		fi
	fi

	# move previous local.bro to new directory
	if [ -f $LOCALBROPREV ] && [ ! -f /opt/zeek/share/zeek/site/local.bro.$PREV ]; then
		mv $LOCALBROPREV /opt/zeek/share/zeek/site/ || echo "Error moving $LOCALBROPREV"
	fi

	# Update broctl.cfg for AF_PACKET
	BROCTLCFG="/opt/bro/etc/broctl.cfg"
	if ! grep "lb_custom.InterfacePrefix=af_packet::" $BROCTLCFG >/dev/null; then
        	echo >> $BROCTLCFG
        	echo "# All interfaces using lb_method=custom should be configured for AF_PACKET" >> $BROCTLCFG
        	echo "lb_custom.InterfacePrefix=af_packet::" >> $BROCTLCFG
	fi
	
	# Create bpf-bro.conf symlink if it doesn't already exist
	SENSORTAB="/etc/nsm/sensortab"
	if [ -f $SENSORTAB ]; then
		for i in `grep -v "^#" $SENSORTAB | awk '{print $1}'`; do 
			cd /etc/nsm/$i/
			[ -f bpf-bro.conf ] || ln -s bpf.conf bpf-bro.conf
			cd ->/dev/null
		done
	fi

	# update node.cfg
	NODECFG="/opt/bro/etc/node.cfg"
	if [ -f $NODECFG ]; then
		sed -i 's|^\[bro\]$|[zeek]|g' $NODECFG || echo "Error updating $NODECFG."
	fi

	# move /opt/bro/share/bro/disable-syslog to /opt/zeek/share/zeek/disable-syslog
	DISABLESYSLOGDIR=/opt/bro/share/bro/disable-syslog
	if [ -d $DISABLESYSLOGDIR ] && [ ! -L $DISABLESYSLOGDIR ] && [ ! -d /opt/zeek/share/zeek/disable-syslog ]; then
		mkdir -p /opt/zeek/share/zeek/ || echo "Error creating /opt/zeek/share/zeek/"
		mv /opt/bro/share/bro/disable-syslog /opt/zeek/share/zeek/ || echo "Error moving /opt/bro/share/bro/disable-syslog/"
	fi

	# /opt/zeek/share/zeek/disable-syslog contains 2 scripts and they both need to be renamed and updated
	DISABLESYSLOG="/opt/zeek/share/zeek/disable-syslog/disable-syslog"
	if [ -f $DISABLESYSLOG.bro ]; then
		sed -i 's|bro_init|zeek_init|g' $DISABLESYSLOG.bro || echo "Error updating $DISABLESYSLOG.bro"
		mv $DISABLESYSLOG.bro $DISABLESYSLOG.zeek || echo "Error renaming $DISABLESYSLOG.bro"
	fi
	DISABLESYSLOGLOCAL="/opt/zeek/share/zeek/disable-syslog/__load__"
	if [ -f $DISABLESYSLOGLOCAL.bro ]; then
		sed -i 's|disable-syslog.bro|disable-syslog|g' $DISABLESYSLOGLOCAL.bro || echo "Error updating $DISABLESYSLOGLOCAL.bro"
		mv $DISABLESYSLOGLOCAL.bro $DISABLESYSLOGLOCAL.zeek || echo "Error renaming $DISABLESYSLOGLOCAL.bro"
	fi

	# if /opt/bro/share/bro still exists as a full directory, rename it
	DIR="/opt/bro/share/bro"
	if [ -d $DIR ] && [ ! -L $DIR ]; then
		mv $DIR $DIR.$PREV || echo "Error moving $DIR"
	fi

	# Existing and new deployments need to ensure symlink is in place
	if [ ! -d $DIR ]; then
		ln -s zeek $DIR || echo "Error creating $DIR symlink"
	fi

	# if Bro is enabled, then tell user to check/install/restart
	CONF="/etc/nsm/securityonion.conf"
	if [ -f $CONF ]; then
		BRO_ENABLED=`grep BRO_ENABLED $CONF | cut -d\= -f2`
		if [ "$BRO_ENABLED" = "yes" ] ; then
			echo "PLEASE NOTE: Zeek scripts have been updated."
			echo "Please double-check your configuration and add back any local customizations."
			echo "Then restart Zeek as follows:"
			echo "sudo so-zeek-restart"
		fi
	fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;


    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
